FROM node:lts-alpine

# install simple http server for serving static content
RUN npm install -g http-server

# install git >> some node dependencies need git
RUN apk add --no-cache git


# make the 'app' folder the current working directory
WORKDIR /app



# copy both 'package.json' and 'package-lock.json' (if available)
COPY package*.json ./

RUN npm cache clear --force


# install project dependencies
RUN npm install
RUN npm install -g @vue/cli


# copy project files and folders to the current working directory (i.e. 'app' folder)
COPY . .

# build app for production with minification
#RUN npm run build

EXPOSE 8080

#CMD [ "http-server", "dist" ]

CMD ["npm","run","dev"]

# docker image build -f Dockerfile.dev -t sgoyal/qsql:latest .
# docker docker run -p 7171:8080 --name qsql --rm -e "HOST=0.0.0.0" sgoyal/qsql

# docker run -p 7171:8080 --name qsql --rm -e "HOST=0.0.0.0" -v //C/php/vue/Qsql2/src:/app/src  sgoyal/qsql

# docker run -p 8080:80 --name inginx --rm -v //C/php/vue/Qsql2/dist:/usr/share/nginx/html:ro  nginx

/usr/share/nginx/html:ro

#The other problem is that the webpack-dev-server is using "localhost" for a host, which needs to be "0.0.0.0" to work in Docker. You can overwrite the host config using an environment variable, so try this command instead:

#docker run --rm -p 8080:8080 -e "HOST=0.0.0.0" -d cportwine/docvue
#The logs should say:

#Your application is running here: http://0.0.0.0:8080